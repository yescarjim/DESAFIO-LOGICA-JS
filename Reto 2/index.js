

const PIN_CORRECTO = "1234";
const SALDO_INICIAL = 100000;
const INTENTOS_MAXIMOS = 3;

let saldoActual = SALDO_INICIAL;
let intentosFallidos = 0;
let sistemaActivo = true;


function iniciarCajero() {
    console.log("üëã=====BIENVENIDO A TU CAJERO AUTOMATICO =====üèß");
    console.log("Por favor Inserte su Tarjeta");
    console.log("");

    saldoActual = SALDO_INICIAL;
    intentosFallidos = 0;
    sistemaActivo = true;

    autenticarUsuario();
}

//Autenticar usuario
function autenticarUsuario() {
    console.log("AUTENTIFICACION REQUERIDA");
    console.log("PIN_CORRECTO")
    console.log("");


    while (sistemaActivo && intentosFallidos < INTENTOS_MAXIMOS) {
        //Solicito Pin al usuario
        let pinIngresado = prompt("Por favor ingrese su Pin de 4 digitos:");

        if (pinIngresado === null) {
            console.log("‚ùåOperaci√≥n cancelada por el usuario");
            cerrarSistema();
            return;
        }


        //Validar Pin
        if (pinIngresado === PIN_CORRECTO) {
            console.log("‚úîPIN CORRECTO");
            console.log("Bienvenido");
            console.log("");

            //Retornar al menu Principal
            mostrarMenuPrincipal();
            return;
        } else {
            intentosFallidos++;
            let intentosRestantes = INTENTOS_MAXIMOS - intentosFallidos;
            console.log("‚ùåPIN INCORRECTO");
            console.log(`intentos Restantes:${intentosRestantes}`);

            if (intentosRestantes > 0) {
                alert(`‚ùåPIN INCORRECTO\n\nTe quedan ${intentosRestantes} intentos.`);

            }
        }
    }

    if (intentosFallidos >= INTENTOS_MAXIMOS) {
        console.log("Tarjeta Bloqueada");
        console.log("Comuniquese a su Banco para desbloquear la Tarjeta");
        alert("TARJETA BLOQUEADA\n\n‚ùå Demasiados Intentos Fallidos\nüìû Contacte a su banco para desbloquear");
        cerrarSistema();
    }
}


///menu principal

function mostrarMenuPrincipal() {
    let continuar = true;


    while (continuar && sistemaActivo) {
        console.log("=====MEN√ö PRUNCIPAL");
        console.log("1Ô∏è‚É£ Ver saldo actual");
        console.log("2Ô∏è‚É£ Hacer un Retiro");
        console.log("3Ô∏è‚É£ Salir del sistema");
        console.log("=======================");

        let opcion = prompt(`üìã MEN√ö PRINCIPAL

1Ô∏è‚É£ Ver saldo actual
2Ô∏è‚É£ Retirar dinero  
3Ô∏è‚É£ Salir del sistema

Seleccione una opci√≥n (1-3):`);

        if (opcion === null) {
            console.log("Operacioncancelada");
            cerrarSistema();
            return;
        }

        switch (opcion) {
            case "1":
                verSaldo();
                break;
            case "2":
                retirarDinero();
                break;
            case "3":
                cerrarSistema();
                continuar = false;
                break;
            default:
                console.log("‚ùå Opci√≥n inv√°lida. Por favor seleccione otra opcion 1,2 o 3");
                alert("‚ùåOpci√≥n inv√°lida\n\nPor favor seleccione un n√∫mero del 1 al 3 ");
        }

    }

}


// ver saldo

function verSaldo() {
    console.log("üí∞=======Consulta Saldo====");
    console.log(`Su Saldo es: $${saldoActual.toLocaleString()}`);
    console.log("==========");

    alert(`üí∞CONSULTA DE SALDO

        Su saldo actual es:
        $${saldoActual.toLocaleString()}`);

    let continuar = confirm("Desea realizar otra operaci√≥n?");
    if (!continuar) {
        cerrarSistema();
    }

}


///retirar diero
function retirarDinero() {
    console.log("======RETIRAR DINERO====");
    console.log(`üí∞Saldo Disponible: $${saldoActual.toLocaleString()}`);

    let monto = prompt(`RETIRO DE DINERO
   Saldo Disponible: $${saldoActual.toLocaleString()}
            
            Ingrese el monto a Retirar:`);

    if (monto === null) {
        console.log("Retiro Cancelado");
        return;
    }
    monto = parseFloat(monto);

    if (isNaN(monto)) {
        console.log(" ‚ùåERROR: Ingrese un numero v√°lido");
        alert("‚ùåERROR\n\nDebe ingresar un monto v√°lido");
        return;
    }

    if (monto <= 0) {
        console.log("‚ùå ERROR: El monto debe ser mayor a $0");
        alert("‚ùå ERROR\n\nEl monto debe ser mayor a $0");
        return;
    }

    // fondosinsuficientes

    if (monto > saldoActual){
        console.log("‚ùåFONDOS INSUFICIENTES");
        console.log(`Su saldo Actual: $${saldoActual.toLocaleString()}`);
        console.log(`Monto solicitado: $${monto.toLocaleString()}`);
        console.log(`Faltante: $${(monto - saldoActual).toLocaleString()}`);

        alert(`‚ùå FONDOS INSUFICIENTES
            Su saldo: $${saldoActual.toLocaleString()}
            monto Solicitado: $${monto.toLocaleString()}
            Faltante: $${(monto-saldoActual).toLocaleString()}`);

        let intentarOtroMonto = confirm(" Quieres intentar otro monto?");
        if (intentarOtroMonto){
            retirarDinero();
        }
        return;

    }


    procesarRetiro(monto);

}

function procesarRetiro(monto) {
    let saldoAnterior = saldoActual;

    console.log(" Procesando  retiro");

    saldoActual = saldoActual - monto;

    generarComprobante(monto, saldoAnterior, saldoActual);

    let continuar = confirm("Desea realizar otra operaci√≥n?");
    if (!continuar) {
        cerrarSistema();
    }

}

//generar comprobante
function generarComprobante(montoRetirado, saldoAnterior, nuevoSaldo) {
    let fecha = new Date();
    let fechaFormateada = fecha.toLocaleDateString('es-ES');
    let horaFormateada = fecha.toLocaleTimeString('es-ES');

    console.log("‚úÖ========TRANSACCI√ìN EXITOSA=======");
    console.log("üé´========COMPROBANTE DE RETIRO=======");
    console.log(`üìÖFecha: ${fechaFormateada}`);
    console.log(`üïê Hora: ${horaFormateada}`);
    console.log(`üí∏ Monto retirado: $${montoRetirado.toLocaleString()} `);
    console.log(`üí∞ Saldo anterior: $${saldoAnterior.toLocaleString()} `);
    console.log(`üíµ Nuevo saldo: $${nuevoSaldo.toLocaleString()} `);
    console.log("===================================");
    console.log("üíµ Retire su dinero de la bandeja");
    console.log("===================================");

    alert(`TRANSACCI√ìN EXITOSA

   üé´ COMPROBANTE DE RETIRO

üìÖ Fecha: ${fechaFormateada}
üïê Hora: ${horaFormateada}
üí∏ Retirado: $${montoRetirado.toLocaleString()}
üí∞ Saldo anterior: $${saldoAnterior.toLocaleString()}
üíµ Nuevo saldo: $${nuevoSaldo.toLocaleString()}
================================
üíµ Retire su dinero de la bandeja`);

}


//CERRAR SISTEMA

function cerrarSistema() {
    sistemaActivo = false;

    console.log(" ===== CERRANDO SESI√ìN =====");
    console.log("‚úÖ Transacci√≥n completada");
    console.log("üí≥ Retire su tarjeta");
    console.log(" Gracias por usar nuestro cajero autom√°tico");
    console.log("üòâQue tenga un excelente d√≠a");
    console.log("==============================");

    alert(` SESI√ìN CERRADA

‚úÖ Operaciones completadas
üí≥ Retire su tarjeta
 Gracias por usar nuestro servicio

üòâ Que tenga un excelente d√≠a`);
}


//FUNCIONES

function reiniciarCajero() {
    saldoActual = SALDO_INICIAL;
    intentosFallidos = 0;
    sistemaActivo = true;

    console.clear();
    console.log(" Sistema Reiniciado");
    iniciarCajero();
}

function mostrarEstadoSistema() {
    console.log("üìä ===== ESTADO DEL SISTEMA =====");
    console.log(`üí∞ Saldo actual: $${saldoActual.toLocaleString()}`);
    console.log(`‚úî PIN correcto: ${PIN_CORRECTO}`);
    console.log(`‚ùå Intentos fallidos: ${intentosFallidos}`);
    console.log(`üÜó Sistema activo: ${sistemaActivo}`);
    console.log("=================================");
}


//instrucciones para el ususario
console.log("üèß CAJERO AUTOM√ÅTICO - INSTRUCCIONES");
console.log("====================================");
console.log("üìù Para comenzar, escriba: iniciarCajero()");
console.log("üîÑ Para reiniciar: reiniciarCajero()");
console.log("üìä Para ver estado: mostrarEstadoSistema()");
console.log("====================================");
console.log("‚ÑπÔ∏è  PIN de prueba: 1234");
console.log("üí∞ Saldo inicial: $100,000");
console.log("====================================");



iniciarCajero();




